plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version

    defaultConfig {
        applicationId "com.ibk.appbackend"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // we define BASE_URL & APP_ID in local.properties file
        // so, this way we can find BASE_URL & APP_ID in BuildConfig.APP_ID or BuildConfig.BASE_URL
        buildConfigField "String", "BASE_URL", "\"" + getBaseUrl() + "\""
        buildConfigField "String", "APP_ID", "\"" + getAppId() + "\""

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // To enable data binding
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // network call related libraries
    implementation rootProject.ext.retrofitDependencies.retrofit2 // REST API calling library
    implementation rootProject.ext.retrofitDependencies.converterGson // JSON parsing library

    // ihsanbal - Interceptor for OkHttp3 with pretty logger(using for retrofit request-response)
    implementation('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }

    // material design
    implementation "com.google.android.material:material:$material_version"

    // recycler view
    implementation "androidx.recyclerview:recyclerview:$recyclerview"

    // card view
    implementation "androidx.cardview:cardview:$cardview"
}

def getBaseUrl() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String baseUrl = properties.getProperty("base_url")
    if (baseUrl == null)
        throw new GradleException("Add 'base_url' field at local.properties file.")

    return baseUrl
}

def getAppId() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String appId = properties.getProperty("app_id")
    if (appId == null)
        throw new GradleException("Add 'app_id' field at local.properties file.")

    return appId
}


